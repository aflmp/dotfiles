# change prefix from C-b to C-a
#unbind C-b
#set -g prefix Home
#bind Home send-prefix

# start with window 1 instead of 0
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# Pane Navigation
#bind-key j select-pane -D 
#bind-key k select-pane -U 
#bind-key h select-pane -L 
#bind-key l select-pane -R 

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

bind C-l send-keys 'C-l'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Disable confirm before closing pane
bind-key x kill-pane

# Mouse mode
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on

# focus events enabled for terminals that support them
set -g focus-events on

# Have a very large history
set -g history-limit 1000000

# tmux messages are displayed for 4 seconds
set -g display-time 3000

# Mouse mode on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# This tmux statusbar config was created by tmuxline.vim
# on Wed, 25 Nov 2015
set -g status "on"
set -g status-bg "colour236" 
set -g status-justify "left"
set -g status-position "top"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left "#{prefix_highlight}#[fg=colour22,bg=colour148,bold] #S #[fg=colour148,bg=colour236,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour250,bg=colour240] %Y-%m-%d %H:%M #[fg=colour252,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour241,bg=colour252] #h "

setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour245,bg=colour236] #I #[fg=colour245,bg=colour236]#W "
setw -g window-status-current-format "#[fg=colour236,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour240] #I #[fg=colour231,bg=colour240]#{?window_zoomed_flag,#[fg=green][],}#W #[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]"

# New Window
bind c new-window -c "#{pane_current_path}"

# Config reload
bind r source-file ~/.tmux.conf \; display-message "reloaded tmux.conf"
bind m split-window -h "vim ~/.tmux.conf"

# Use vim keybindings in copy mode
#setw -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
#unbind -T copy-mode-vi Enter
#unbind -T copy-mode-vi Space

#bind-key -T edit-mode-vi Up send-keys -X history-up
#bind-key -T edit-mode-vi Down send-keys -X history-down

# setup 'v' to begin selection as in Vim
#bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
